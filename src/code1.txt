1    SUM     START   0000        ; Program starts at address 0000
2            FLOAT               ; Convert accumulator to floating-point (SIC/XE)
3            LDA     #300        ; Load immediate value 300 into A
4            +LDB    #TABLE2     ; Extended load: address of TABLE2 into B (Format 4)
5            BASE    TABLE2      ; Establish base addressing for TABLE2
6    LOOP    ADD     TABLE,X     ; Add word at (TABLE + X) to A (indexed)
7            ADD     TABLE2,X    ; Add word at (TABLE2 + X) to A (indexed)
8            TIX     @COUNT      ; Increment X, compare with indirect COUNT value
9            JLT     LOOP        ; Jump to LOOP if X < comparison value
10           +STA    TOTAL       ; Extended store A at TOTAL (3 words)
11           RSUB                ; Return from subroutine
12           COMPR   X,A         ; Compare register X with accumulator A
13           COMPR   X,A         ; Compare register X with accumulator A
14           COMPR   X,A         ; Compare register X with accumulator A
15           CLEAR   A           ; Clear accumulator A
16   EOF     BYTE    C'EOF'      ; Define 3-byte ASCII constant 'EOF'
17   COUNT   BYTE    X'F1'       ; Define byte-sized hex value F1
18   TABLE   RESW    2000        ; Reserve 2000 words (6000 bytes) for TABLE
19   TOTAL   WORD    20,10,30    ; Reserve space for 3 words
20   TABLE2  WORD    2000        ; Define word initialized to decimal 2000
21   TOTAL   WORD    20,10,30    ; Reserve space for 3 words
22           END     0000        ; End of program, entry point at SUM